# SPDX-License-Identifier: GPL-2.0-or-later
name: Build

env:
  KERNEL_NAME: grate
  KBUILD_DEFCONFIG: tegra_defconfig
  CROSS_COMPILE: arm-linux-gnueabihf- # build for armv7
  ARCH_SPEC_PKGS: crossbuild-essential-armhf
  ARCH: arm # build for armv7

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 ${{ env.ARCH_SPEC_PKGS }} git build-essential binutils-multiarch device-tree-compiler fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev dwarves python3-pip socat > /dev/null
          pip3 install -U --user tuxmake
          tuxmake --directory ./ --build-dir=cache/ --target-arch=arm -k $KBUILD_DEFCONFIG $TUXMAKE_EXTRA_OPTS
          cd /home/runner/.cache/tuxmake/builds/1/
          tar -cf linux-grate-next.tar *
          cd -
          mv /home/runner/.cache/tuxmake/builds/1/linux-grate-next.tar ./

      - uses: "marvinpinto/action-automatic-releases@latest"
        if: ${{!startsWith(github.ref, 'refs/pull')}}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.KERNEL_NAME }}"
          prerelease: true
          title: "Build ${{ env.KERNEL_NAME }}"
          files: |
            *.tar
  dtbs:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 ${{ env.ARCH_SPEC_PKGS }} libyaml-dev git build-essential binutils-multiarch device-tree-compiler fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev dwarves python3-pip socat > /dev/null
          pip3 install -U --user git+https://github.com/devicetree-org/dt-schema.git@master
          make $KBUILD_DEFCONFIG
          status=0
          make -j3 dtbs || status=1
          make -j3 dtbs_check || status=1
          exit $status

  dt_bindings_check:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 ${{ env.ARCH_SPEC_PKGS }} libyaml-dev git build-essential binutils-multiarch device-tree-compiler fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev dwarves python3-pip socat > /dev/null
          pip3 install -U --user git+https://github.com/devicetree-org/dt-schema.git@master
          make -j3 dt_binding_check
